# The "obstacle_range" parameter determines the maximum range sensor reading that will result in an obstacle being put into the costmap. Here, we have it set at 2.5 meters, which means that the robot will only update its map with information about obstacles that are within 2.5 meters of the base

obstacle_range: 1.25 #2.5

# The "raytrace_range" parameter determines the range to which we will raytrace freespace given a sensor reading. Setting it to 3.0 meters as we have above means that the robot will attempt to clear out space in front of it up to 3.0 meters away given a sensor reading.

raytrace_range: 2.5 #1.75 #3.0

# Robot footprint size in m for a circular robot. Could alternatively use a polygon "footprint"

robot_radius: 0.26 

# The inflation radius should be set to the maximum distance from obstacles at which a cost should be incurred. For example, setting the inflation radius at 0.55 meters means that the robot will treat all paths that stay 0.55 meters or more away from obstacles as having equal obstacle cost.

inflation_radius: 0.40


# Defintion of sensor sources

#observation_sources: laser_scan_sensor # point_cloud_sensor
#observation_sources: kinect_to_laser_scan_sensor # point cloud conversion to laser scan
#observation_sources: combined_laser_scan_sensor # laser scan consisting of base laser and kinect laser scans
#observation_sources: laser_scan_sensor kinect_voxelgrid #xtion_voxelgrid
#observation_sources: kinect
#observation_sources: kinect_voxelgrid

# This line sets parameters on a laser_scan_sensor. The "frame_name" parameter should be set to the name of the coordinate frame of the sensor, the "data_type" parameter should be set to LaserScan or PointCloud depending on which message the topic uses, and the "topic_name" should be set to the name of the topic that the sensor publishes data on. The "marking" and "clearing" parameters determine whether the sensor will be used to add obstacle information to the costmap, clear obstacle information from the costmap, or do both.

laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: /scan, marking: true, clearing: true, obstacle_range: 3.00, raytrace_range: 3.50}

kinect_to_laser_scan_sensor: {sensor_frame: camera_depth_frame, data_type: LaserScan, topic: /kinect_to_laser_scan, marking: true, clearing: true}

combined_laser_scan_sensor: {sensor_frame: laser, data_type: LaserScan, topic: /combined_laser_scan, marking: true, clearing: true}

kinect: {sensor_frame: camera_depth_optical_frame, data_type: PointCloud2, topic: /cloud_throttled, marking: true, clearing: true}

kinect_voxelgrid: {sensor_frame: camera_depth_optical_frame, data_type: PointCloud2, topic: /voxel_grid_kinect/output, marking: true, clearing: true}

xtion_voxelgrid: {sensor_frame: xtion_depth_optical_frame, data_type: PointCloud2, topic: /voxel_grid_xtion/output, marking: true, clearing: true}



# observation_sources: sonar_sensor
# sonar_sensor: {sensor_frame: 'sonar', data_type: PointCloud, topic: /sonar, marking: true, clearing: true}



